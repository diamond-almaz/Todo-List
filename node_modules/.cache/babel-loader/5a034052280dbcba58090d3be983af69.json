{"ast":null,"code":"var _jsxFileName = \"/Users/almazsaripov/Documents/react-learning5/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport PostStatusFilter from '../post-status-filter';\nimport PostList from '../post-list';\nimport PostAddForm from '../post-add-form';\nimport './app.css';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        label: 'Going to learn React',\n        important: true,\n        like: true,\n        id: 1\n      }, {\n        label: 'That is so good',\n        important: false,\n        like: false,\n        id: 2\n      }, {\n        label: 'I need a break...',\n        important: false,\n        like: false,\n        id: 3\n      }],\n      term: '',\n      filter: 'all'\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onToggleImportant = this.onToggleImportant.bind(this);\n    this.onToggleLiked = this.onToggleLiked.bind(this);\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    this.onFilterSelect = this.onFilterSelect.bind(this);\n    this.maxId = 4;\n  }\n\n  deleteItem(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  addItem(body) {\n    const newItem = {\n      label: body,\n      important: false,\n      id: this.maxId++\n    };\n    this.setState(({\n      data\n    }) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleImportant(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        important: !old.important\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleLiked(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        like: !old.like\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  searchPost(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.indexOf(term) > -1;\n    });\n  }\n\n  filterPost(items, filter) {\n    if (filter === 'like') {\n      return items.filter(item => item.like);\n    } else {\n      return items;\n    }\n  }\n\n  onUpdateSearch(term) {\n    this.setState({\n      term\n    });\n  }\n\n  onFilterSelect(filter) {\n    this.setState({\n      filter\n    });\n  }\n\n  render() {\n    const {\n      data,\n      term,\n      filter\n    } = this.state;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      liked: liked,\n      allPosts: allPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-panel d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchPanel, {\n      onUpdateSearch: this.onUpdateSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(PostStatusFilter, {\n      filter: filter,\n      onFilterSelect: this.onFilterSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(PostList, {\n      posts: visiblePosts,\n      onDelete: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleLiked: this.onToggleLiked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PostAddForm, {\n      onAdd: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/almazsaripov/Documents/react-learning5/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","PostStatusFilter","PostList","PostAddForm","App","constructor","props","state","data","label","important","like","id","term","filter","deleteItem","bind","addItem","onToggleImportant","onToggleLiked","onUpdateSearch","onFilterSelect","maxId","setState","index","findIndex","elem","newArr","slice","body","newItem","old","searchPost","items","length","item","indexOf","filterPost","render","liked","allPosts","visiblePosts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AppHeader from '../app-header'\nimport SearchPanel from '../search-panel'\nimport PostStatusFilter from '../post-status-filter'\nimport PostList from '../post-list'\nimport PostAddForm from '../post-add-form'\nimport './app.css'\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data : [\n                {label: 'Going to learn React', important: true, like: true, id: 1},\n                {label: 'That is so good', important: false, like: false, id: 2},\n                {label: 'I need a break...', important: false, like: false, id: 3}\n            ],\n            term: '',\n            filter: 'all'\n        };\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n        this.maxId = 4;\n    }\n\n    deleteItem(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.maxId++\n        }\n        this.setState(({data}) => {\n            const newArr = [...data, newItem];\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    onToggleImportant(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        }); \n    }\n\n    onToggleLiked(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        }); \n    }\n\n    searchPost(items, term) {\n        if (term.length === 0) {\n            return items\n        }\n\n        return items.filter((item) => {\n            return item.label.indexOf(term) > -1\n        });\n    }\n\n    filterPost(items, filter) {\n        if (filter === 'like') {\n            return items.filter(item => item.like)\n        } else {\n            return items\n        }\n    }\n\n    onUpdateSearch(term) {\n        this.setState({term})\n    }\n    \n    onFilterSelect(filter){\n        this.setState({filter})\n    }\n\n    render() {\n        const {data, term, filter} = this.state;\n\n        const liked = data.filter((item) => item.like).length;\n        const allPosts = data.length;\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\n        return (\n            <div className=\"app\">\n                <AppHeader liked={liked} allPosts={allPosts}/>\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel\n                        onUpdateSearch={this.onUpdateSearch}/>\n                    <PostStatusFilter\n                        filter={filter}\n                        onFilterSelect={this.onFilterSelect}/>\n                </div>\n                <PostList \n                posts={visiblePosts}\n                onDelete={this.deleteItem}\n                onToggleImportant={this.onToggleImportant}\n                onToggleLiked={this.onToggleLiked}/>\n                <PostAddForm\n                onAdd={this.addItem}/>\n            </div>\n         )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}